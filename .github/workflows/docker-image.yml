name: Docker Image CI

on:
  push:
    branches: ["main", "dev*", "dev/*", "fix*", "fix/*"]
    tags: ["*.*.*"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        image-tag: [
            alpine3.17,
            alpine3.18,
            bookworm-slim,
            bullseye-slim,
            focal,
            jammy,
            #jammy-chiseled,
          ]
    name: ${{ matrix.image-tag }}
    runs-on: ubuntu-latest
    env:
      ASPNET_VERSION: "6.0.10"
      IMAGE_TAG: "6.0.10"
      SKIP_DOCKER: "false"
      IS_SEMVER_TAG: "false"
      IS_TAG: ""
    steps:
      - name: Check Tag Ref
        run: |
          IS_TAG=${{ startsWith(github.ref, 'refs/tags/') }}
          echo "IS_TAG=$IS_TAG" >> $GITHUB_ENV
          if [ "$IS_TAG" == 'true' ]; then 
            if [[ '${{ github.ref_name }}' =~ ^([0-9]+\.[0-9]+(\.[0-9]+)?(-.+)?)$ ]]; then
              echo "IS_SEMVER_TAG=true" >> $GITHUB_ENV
              echo "ASPNET_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
              echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
              echo "Update ASPNET_VERSION to ${{ github.ref_name }}"
            fi
          else
            # ASPNET_VER=$( [ '${{ matrix.image-tag }}' == 'bookworm-slim' ] && ( echo '8.0-preview' ) || [ '${{ matrix.image-tag }}' == 'focal' ] && ( echo '6.0' ) || ( echo '7.0' ) )
            ASPNET_VER=7.0
            if [ '${{ matrix.image-tag }}' == 'bookworm-slim' ] || [ '${{ matrix.image-tag }}' == 'jammy-chiseled' ] ; then
              ASPNET_VER=8.0-preview
            elif [ '${{ matrix.image-tag }}' == 'focal' ]; then
              ASPNET_VER=6.0
            fi
            #ASPNET_VERSION=$(docker run --rm mcr.microsoft.com/dotnet/aspnet:$ASPNET_VER-${{ matrix.image-tag }} sh -c 'echo $ASPNET_VERSION')
            docker pull mcr.microsoft.com/dotnet/aspnet:$ASPNET_VER-${{ matrix.image-tag }}
            ASPNET_VERSION=$(docker inspect mcr.microsoft.com/dotnet/aspnet:$ASPNET_VER-${{ matrix.image-tag }} --format "{{ index (index .Config.Env) }}" | tr ' ' '\n' | grep ASPNET_VERSION= | sed 's/^.*=//' | sed 's/]$//')
            echo "ASPNET_VERSION=$ASPNET_VERSION" >> $GITHUB_ENV
            echo "Update ASPNET_VERSION to $ASPNET_VERSION"
          fi

      - name: Skip docker build .NET 8.0 alpine3.17 bullseye-slim focal
        if: ${{ (matrix.image-tag == 'alpine3.17' || matrix.image-tag == 'bullseye-slim' || matrix.image-tag == 'focal') && startsWith(env.ASPNET_VERSION, '8.') }}
        run: echo "SKIP_DOCKER=true" >> $GITHUB_ENV

      - name: Skip docker build .NET 7.0 alpine3.18 bookworm-slim focal jammy-chiseled
        if: ${{ (matrix.image-tag == 'alpine3.18' || matrix.image-tag == 'bookworm-slim' || matrix.image-tag == 'focal' || matrix.image-tag == 'jammy-chiseled') && startsWith(env.ASPNET_VERSION, '7.') }}
        run: echo "SKIP_DOCKER=true" >> $GITHUB_ENV

      - name: Skip docker build .NET 6.0 alpine3.18 bookworm-slim jammy-chiseled
        if: ${{ (matrix.image-tag == 'alpine3.18' || matrix.image-tag == 'bookworm-slim' || matrix.image-tag == 'jammy-chiseled') && startsWith(env.ASPNET_VERSION, '6.') }}
        run: echo "SKIP_DOCKER=true" >> $GITHUB_ENV

      - name: Update Image Tag
        if: ${{ env.SKIP_DOCKER != 'true' && env.IS_TAG != 'true' }}
        shell: pwsh
        run: |
          $aspnetVersion = '${{ env.ASPNET_VERSION }}'
          # 8.0.0-preview.7.23375.9
          $pattern = '^(?<preview>8\.0(\.0)?-(preview|rc)\.[^.]+)(\..*)?$'
          if ($aspnetVersion -match $pattern) {
              $imageTag = $aspnetVersion -replace $pattern,'${preview}'
              Write-Host "ASPNET: $aspnetVersion"
              Write-Host "IMAGE_TAG: $imageTag"
              "IMAGE_TAG=$imageTag" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          }

      - uses: actions/checkout@v3
        if: ${{ env.SKIP_DOCKER != 'true' }}

      - name: Docker meta
        id: meta
        if: ${{ env.SKIP_DOCKER != 'true' }}
        uses: docker/metadata-action@v3
        with:
          images: netlah/aspnet-webssh
          tags: |
            type=match,enable=true,priority=900,prefix=,suffix=,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=sha,enable=true,priority=600,prefix=sha-,suffix=,format=short
            type=ref,event=branch,priority=500,prefix=,suffix=

      - name: Enabling Docker Daemon With experimental features
        if: ${{ success() && env.SKIP_DOCKER != 'true' && github.event_name != 'pull_request' }}
        run: |
          echo 'Before update daemon.json'
          sudo cat /etc/docker/daemon.json
          sudo bash -c 'echo "{ "\""exec-opts"\"": ["\""native.cgroupdriver=cgroupfs"\""], "\""cgroup-parent"\"": "\""/actions_job"\"", "\""experimental"\"": true }" > /etc/docker/daemon.json'
          echo 'After update daemon.json'
          sudo cat /etc/docker/daemon.json
          sudo systemctl restart docker.service

      - name: Set up Docker Buildx
        if: ${{ success() && env.SKIP_DOCKER != 'true' && github.event_name != 'pull_request' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ success() && env.SKIP_DOCKER != 'true' && github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        if: ${{ success() && env.SKIP_DOCKER != 'true' && github.event_name != 'pull_request' }}
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}-${{ matrix.image-tag }}
        shell: pwsh
        run: |
          if ('${{ env.IS_SEMVER_TAG }}' -eq $true) { $repos += @('netlah/aspnet-webssh') }
          $repos += @('${{ secrets.DOCKER_HUB_REPOS }}')
          ./docker-build.ps1 -imageTag ${{ env.IMAGE_TAG }} -dockerRepository $repos -Squash -Labels $(@'
          ${{ steps.meta.outputs.labels }}
          '@.Trim()) -Verbose
